"""
–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è/–∑–∞–≥—Ä—É–∑–∫–∏ SpritePro

–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–≥—Ä–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö.
"""

import spritePro as s

def main():
    print("SpritePro Save/Load System - –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä")
    print("=" * 45)
    
    # === 1. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Å—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö ===
    print("\n1. –†–∞–±–æ—Ç–∞ —Å –∏–≥—Ä–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:")
    
    # –î–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞
    player_data = {
        'name': '–ì–µ—Ä–æ–π',
        'level': 10,
        'experience': 2500,
        'gold': 1250,
        'inventory': ['–º–µ—á', '—â–∏—Ç', '–∑–µ–ª—å–µ –∑–¥–æ—Ä–æ–≤—å—è'],
        'stats': {
            'health': 100,
            'mana': 80,
            'strength': 15,
            'agility': 12
        }
    }
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    print("   –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞...")
    if s.utils.save(player_data, 'player_save.json'):
        print("   ‚úì –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞
    print("   –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞...")
    loaded_data = s.utils.load('player_save.json')
    print(f"   ‚úì –ó–∞–≥—Ä—É–∂–µ–Ω –∏–≥—Ä–æ–∫: {loaded_data['name']}, —É—Ä–æ–≤–µ–Ω—å {loaded_data['level']}")
    
    # === 2. –†–∞–±–æ—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ ===
    print("\n2. –†–∞–±–æ—Ç–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏–≥—Ä—ã:")
    
    settings = {
        'graphics': {
            'resolution': (1920, 1080),
            'fullscreen': False,
            'quality': 'high'
        },
        'audio': {
            'master_volume': 0.8,
            'music_volume': 0.6,
            'sfx_volume': 0.9
        },
        'controls': {
            'move_up': 'W',
            'move_down': 'S',
            'move_left': 'A',
            'move_right': 'D'
        }
    }
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    s.utils.save(settings, 'game_settings.json')
    print("   ‚úì –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Å –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    default_settings = {'audio': {'master_volume': 1.0}}
    loaded_settings = s.utils.load('game_settings.json', default_value=default_settings)
    print(f"   ‚úì –ó–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {loaded_settings['graphics']['resolution']}")
    
    # === 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ ===
    print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:")
    
    if s.utils.exists('player_save.json'):
        print("   ‚úì –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞ –Ω–∞–π–¥–µ–Ω")
    
    if s.utils.exists('nonexistent_file.json'):
        print("   ‚úì –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω")
    else:
        print("   ‚úì –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # === 4. –†–∞–±–æ—Ç–∞ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ ===
    print("\n4. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
    
    game_log = """
–ò–≥—Ä–æ–≤–æ–π –ª–æ–≥:
- –ò–≥—Ä–æ–∫ –Ω–∞—á–∞–ª –Ω–æ–≤—É—é –∏–≥—Ä—É
- –î–æ—Å—Ç–∏–≥–Ω—É—Ç —É—Ä–æ–≤–µ–Ω—å 5
- –ù–∞–π–¥–µ–Ω —Ä–µ–¥–∫–∏–π –ø—Ä–µ–¥–º–µ—Ç
- –ü–æ–±–µ–∂–¥–µ–Ω –±–æ—Å—Å
- –ò–≥—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞
    """.strip()
    
    s.utils.save(game_log, 'game_log.txt', 'text')
    loaded_log = s.utils.load('game_log.txt', 'text')
    print(f"   ‚úì –°–æ—Ö—Ä–∞–Ω–µ–Ω –∏ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–æ–≥ ({len(loaded_log)} —Å–∏–º–≤–æ–ª–æ–≤)")
    
    # === 5. –†–∞–±–æ—Ç–∞ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π ===
    print("\n5. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–π:")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–º–∏ –∫–æ–ø–∏—è–º–∏
    from spritePro.utils import SaveLoadManager
    
    manager = SaveLoadManager(
        default_file="game_state.json",
        auto_backup=True,
        compression=False
    )
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
    game_state = {
        'current_level': 3,
        'enemies_defeated': 25,
        'secrets_found': 7,
        'play_time': 3600,  # —Å–µ–∫—É–Ω–¥—ã
        'last_checkpoint': (150, 200)
    }
    
    manager.save(game_state)
    print("   ‚úì –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–µ–π")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    loaded_state = manager.load()
    print(f"   ‚úì –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: —É—Ä–æ–≤–µ–Ω—å {loaded_state['current_level']}, "
          f"–≤—Ä–µ–º—è –∏–≥—Ä—ã {loaded_state['play_time']}—Å")
    
    # === 6. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ ===
    print("\n6. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:")
    
    try:
        # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª –±–µ–∑ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        s.utils.load('missing_file.json')
    except s.utils.SaveLoadError:
        print("   ‚úì –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ —Å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    safe_data = s.utils.load('missing_file.json', default_value={'status': 'new_game'})
    print(f"   ‚úì –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞: {safe_data}")
    
    # === 7. –û—á–∏—Å—Ç–∫–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ===
    print("\n7. –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏:")
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    files_to_check = ['player_save.json', 'game_settings.json', 'game_log.txt', 'game_state.json']
    existing_files = [f for f in files_to_check if s.utils.exists(f)]
    print(f"   –°–æ–∑–¥–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(existing_files)}")
    
    # –°–ø—Ä–æ—Å–∏—Ç—å –æ —É–¥–∞–ª–µ–Ω–∏–∏
    print("\n   –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏.")
    response = input("   –£–¥–∞–ª–∏—Ç—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã? (y/n): ").lower().strip()
    
    if response in ['y', 'yes', '–¥–∞', '–¥']:
        deleted_count = 0
        for filename in files_to_check:
            if s.utils.delete(filename, include_backups=True):
                deleted_count += 1
        print(f"   ‚úì –£–¥–∞–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {deleted_count}")
    else:
        print("   ‚Ñπ –§–∞–π–ª—ã –æ—Å—Ç–∞–≤–ª–µ–Ω—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è")
    
    print("\nüéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\n–î–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–æ–≤ –∑–∞–ø—É—Å—Ç–∏—Ç–µ:")
    print("python spritePro/demoGames/save_load_demo.py")


if __name__ == "__main__":
    main()